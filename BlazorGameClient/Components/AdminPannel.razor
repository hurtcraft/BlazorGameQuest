@using System.Net.Http.Json
@using BlazorGameQuestClassLib
@inject HttpClient httpClient
@inject PlayerServices playerServices
<MudStack  Spacing="2">
    <h1>Admin Panel</h1>

    <MudDataGrid Items="@players" Filterable="false" SortMode="@SortMode.None" Groupable="false">
        <Columns>
            <PropertyColumn Property="x => x.Id" Title="Id" />

            <PropertyColumn Property="x => x.Name" Title="Nom" />
            <PropertyColumn Property="x => x.Score" Title="Score" />
            <TemplateColumn CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudStack Row Spacing="1">
                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">Modifier</MudButton>
                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">Supprimer</MudButton>
                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">Bloquer</MudButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
</MudStack>
@code {
    private IEnumerable<Player> players = new List<Player>();

    public record Employee(string Name, int Score);
    //valeurs statiques temporaires
    public IEnumerable<Employee> employees=new List<Employee>
        {

            new Employee("Sam", 87000),
            new Employee("Alicia", 143000),
            new Employee("Ira", 92000),
            new Employee("John", 229000),
        };

    protected override async Task OnInitializedAsync()
    {
        players = await playerServices.GetAllAsync();
    }
}